---
import type { CollectionEntry } from 'astro:content'
import FormattedDate from '@/components/FormattedDate'
import BaseLayout from '@/layouts/BaseLayout'
import type { MarkdownHeading } from 'astro'
import { Image } from 'astro:assets'

type Props = {
	data: CollectionEntry<'blog'>['data']
	readTime: string
}

const { data, readTime } = Astro.props
const { title, description, pubDate, cover, tags } = data

const articleDate = pubDate.toISOString()
---

<BaseLayout title={title} description={description} image={cover?.src} articleDate={articleDate}>
	<article class='min-w-full md:py-4 sm:max-w-none'>
		<header class='mb-3 flex flex-col justify-center items-center gap-6'>
			<div class='flex flex-col gap-2'>
				<h1 class='title text-center text-2xl md:text-4xl md:pb-2.5 font-semibold opacity-0'>
					{title}
				</h1>
				<div class='flex items-center justify-center gap-x-1'>
					<p class='text-center text-sm text-opacity-50'>
						发布于 <FormattedDate date={pubDate} />
					</p>
					<p class='text-center text-sm text-opacity-50 font-bold'>
						- {readTime}
					</p>
				</div>
			</div>

			<div class='my-2 flex flex-wrap justify-center items-center gap-2 gap-y-4 md:gap-5'>
				{
					tags.map((tag) => (
						<a href={`/tags/${tag}`} aria-label={tag}>
							<span class='bg-indigo-600 font-semibold text-white dark:bg-indigo-900 dark:text-white shadow text-sm w-fit px-2 py-1 md:px-5 md:py-2 rounded-full'>
								{tag}
							</span>
						</a>
					))
				}
			</div>
		</header>

		<div class='relative'>
			{
				cover && (
					<Image
						src={cover}
						width={1000}
						height={500}
						quality={100}
						format='jpg'
						loading='eager'
						class='rounded-md w-full max-h-[300px] md:max-h-[500px] my-8 object-cover opacity-0 transition-opacity duration-700 ease-in'
						alt={`cover image of blog "${title}"`}
					/>
				)
			}
			<div
				style='backdrop-filter: blur(25px) saturate(180%);'
				class='placeholder absolute inset-0 blur rounded-md transition-opacity duration-700 ease-out border-2 border-neutral-200 bg-gray-200 dark:border-neutral-900 dark:bg-zinc-900 bg-opacity-90'
			>
			</div>
		</div>

		<hr />

		<div>
			<slot />
		</div>
	</article>
</BaseLayout>

<script is:inline>
	const img = document.querySelector('img')
	const placeholder = document.querySelector('.placeholder')

	img?.addEventListener('load', () => {
		img.classList.add('opacity-100')
		placeholder.classList.add('opacity-0')
	})
</script>

<script>
	import { animate } from 'motion'

	animate(
		'.title',
		{
			opacity: [0, 1],
			clipPath: ['polygon(0 0, 0 0, 0 100%, 0% 100%)', 'polygon(100% 0, 0 0, 0 100%, 100% 100%)']
		},
		{ duration: 1, easing: 'ease-in-out' }
	)
</script>
