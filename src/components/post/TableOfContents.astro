---
import TOCItem from './TOCItem.astro'

const { headings } = Astro.props

type TableOfContent = {
	depth: number
	text: string
	slug: string
	subheadings: TableOfContent[]
}

const toc = buildToc(headings)
function buildToc(headings: TableOfContent[]) {
	let toc: TableOfContent[] = []
	if (!headings || headings.length === 0) return toc
	let parentHeadings = new Map()
	headings.forEach((h) => {
		let heading = { ...h, subheadings: [] }
		parentHeadings.set(heading.depth, heading)
		// Change 2 to 1 if your markdown includes your <h1>
		if (heading.depth === 1 || heading.depth === 2) {
			toc.push(heading)
		} else {
			parentHeadings.get(heading.depth - 1)?.subheadings?.push(heading)
		}
	})
	return toc
}
---

<nav class='max-w-xs'>
	<div class='flex'>
		<h1 class='font-bold mb-3 text-2xl dark:text-white'>文章目录</h1>
		<div>
			<button type='button' id='scroll-top-btn'></button>
		</div>
	</div>
	<ul
		id='toc'
		class='[text-wrap:balance] flex flex-col gap-1 overflow-y-auto max-h-[calc(100vh-16rem)]'
	>
		{toc.map((heading) => <TOCItem heading={heading} />)}
	</ul>
</nav>

<script>
	function scrollToTop() {
		window.scrollTo({ top: 0, behavior: 'smooth' })
	}
	function scrollToBottom() {
		window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' })
	}
</script>
