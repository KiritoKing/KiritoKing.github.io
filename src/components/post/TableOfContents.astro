---
import { cn } from '@/utils'

const { headings } = Astro.props

type TableOfContent = {
	depth: number
	text: string
	slug: string
	subheadings: TableOfContent[]
}

const toc = buildToc(headings)
function buildToc(headings: TableOfContent[]) {
	let toc: TableOfContent[] = []
	let parentHeadings = new Map()
	headings.forEach((h) => {
		let heading = { ...h, subheadings: [] }
		parentHeadings.set(heading.depth, heading)
		// Change 2 to 1 if your markdown includes your <h1>
		if (heading.depth === 1 || heading.depth === 2) {
			toc.push(heading)
		} else {
			parentHeadings.get(heading.depth - 1)?.subheadings?.push(heading)
		}
	})
	return toc
}
---

<nav class='max-w-xs dark:text-black'>
	<h1 class='font-bold mb-3 text-2xl dark:text-white'>文章目录</h1>
	<ul class='[text-wrap:balance] flex flex-col gap-1'>
		{
			toc.map((heading) => (
				<li class='flex flex-col'>
					<a
						href={'#' + heading.slug}
						class={cn(
							`bg-slate-200 dark:bg-slate-800 dark:hover:bg-indigo-400 hover:bg-indigo-300 hover:text-white  py-1 px-4 dark:text-white rounded-full mb-2 first-letter:uppercase w-fit line-clamp-2`
						)}
					>
						{heading.text}
					</a>
					{heading.subheadings.length > 0 && (
						<ul class='ml-3'>
							{heading.subheadings.map((subheading) => (
								<Astro.self heading={subheading} />
							))}
						</ul>
					)}
				</li>
			))
		}
	</ul>
</nav>
